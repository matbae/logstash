# Author: Mattias Baecklund
# 2301_filter_winlogbeat.conf
# Powershell logs can stretch multiple log post this combines them into one log post.
# Will only work with  pipeline workers set to 1
# Have not found a way around that yet
# TODO:Cleanup
filter {
  if "winlog" in [tags] {
    if [log_name_event_id] == "Microsoft-Windows-PowerShell_Microsoft-Windows-PowerShell/Operational_4104" and [event_data][MessageTotal]!="1" {
	  fingerprint {
	    source => "[event_data][ScriptBlockId]"
		method => "MD5"
	  }
	  # [event_data][ScriptBlockText]
	  # [event_data][MessageNumber]
	  # [event_data][MessageTotal]
	  # [event_data][Path]
	  # [event_data][ScriptBlockId]	       	2337ab10-7d84-4fff-a9f9-2b8615458adc
	  # [event_data][ScriptBlockText]
	  aggregate {
	    # task_id => "%{[event_data][ScriptBlockId]}"
		task_id => "%{fingerprint}"
		code => "
		  messagetotal = event.get('[event_data][MessageTotal]').to_i
		  messagenumber = event.get('[event_data][MessageNumber]').to_i-1
		  map['counter'] ||= 0
		  map['counter'] += 1
		  map['Script'] ||= []
		  map['Parts2'] ||= []
		  map['Times'] ||= []
		  map['Records'] ||= []
		  map['Records'][messagenumber] = event.get('record_number')
		  map['Parts2'] <<  messagenumber
		  map['Times'] << Time.now.utc
		  map['Script'][messagenumber] = event.get('[event_data][ScriptBlockText]')
		  map['Path'] = event.get('[event_data][Path]')
		  map['ScriptBlockId'] = event.get('[event_data][ScriptBlockId]')
		  map['tags'] ||= ['aggregate']
		  map['org_timestamp'] ||= event.get('@timestamp')
		  if map['counter'] == messagetotal
		    map['ScriptText'] = map['Script'].join()
			map['Complete'] = true
			map_meta.timeout=0
		  end
		"
		push_previous_map_as_event => true
		push_map_as_event_on_timeout => true
		timeout => 1200
		#timeout_task_id_field => "task_id"
		timeout_timestamp_field => "@timestamp"
		# map['MessageTotal'] ||= event.get{'[event_data][MessageTotal]')
	  }
	}
	# changes places on org_timestamp and timestamp of creation
	# removes script array
	if "aggregate" in [tags] {
	  mutate {
	    rename => { "@timestamp" => "created_time" }
		rename => { "org_timestamp" => "@timestamp" }
		remove_field => [ "Script" ]
	  }
	}
  }
}